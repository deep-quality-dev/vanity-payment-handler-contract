{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "b340156a41dda35ee7795c1aa09c5c55298463823264826ebc1f0f081bbd99f9",
          "withoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c",
          "linkedWithoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "setOperatorAddress(address)",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:86"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:79"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "b340156a41dda35ee7795c1aa09c5c55298463823264826ebc1f0f081bbd99f9",
          "withoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c",
          "linkedWithoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "setOperatorAddress(address)",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:86"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:79"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Vanity.sol:283",
        "version": {
          "withMetadata": "8e56325c7e41d96f1b2b04bd205ecae68a9ef58a439795a1ec07a6ab689703ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "contracts\\Vanity.sol:268",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts\\Vanity.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts\\Vanity.sol:499",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\Vanity.sol:518",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Vanity.sol:571",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Vanity.sol:669",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts\\Vanity.sol:430",
        "version": {
          "withMetadata": "51e596675dc56e0ff928fdc290f8f6cf46a86ad2cc169287a212079fdf61ab36",
          "withoutMetadata": "af28cfa159ef369c68d3effba941b7f89bb340b87f7f1f8bac81d270abb1f08e",
          "linkedWithoutMetadata": "af28cfa159ef369c68d3effba941b7f89bb340b87f7f1f8bac81d270abb1f08e"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)",
          "geUnlockTime()",
          "lock(uint256)",
          "unlock()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_owner",
            "src": "contracts\\Vanity.sol:431"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:431"
            },
            {
              "contract": "Ownable",
              "label": "_previousOwner",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:432"
            },
            {
              "contract": "Ownable",
              "label": "_lockTime",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:433"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\Vanity.sol:125",
        "version": {
          "withMetadata": "b755f89077853894b6075e39fb5eb065a3c71f7eb15762218d9486ead81a2997",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VANITY": {
        "src": "contracts\\Vanity.sol:711",
        "version": {
          "withMetadata": "e4a337bd2bc68c3d7451233e28a38de163cea324dfd413a83b5136557f839804",
          "withoutMetadata": "bd36c754196db8f06918fa0daed35182f3596e70fece2ce57f14c40e3bc9b61b",
          "linkedWithoutMetadata": "bd36c754196db8f06918fa0daed35182f3596e70fece2ce57f14c40e3bc9b61b"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "isExcludedFromReward(address)",
          "totalFees()",
          "reflectionFromToken(uint256,bool)",
          "tokenFromReflection(uint256)",
          "excludeFromReward(address)",
          "includeInReward(address)",
          "excludeFromFee(address)",
          "includeInFee(address)",
          "setTaxFeePercent(uint256)",
          "setMarketingFeePercent(uint256)",
          "setBurnFeePercent(uint256)",
          "ChangeMarketingWallet(address)",
          "AmountPeopleHodl4Sell(uint256)",
          "setLiquidityFeePercent(uint256)",
          "setRouter(address)",
          "setSwapAndLiquifyEnabled(bool)",
          "settoken2LP(uint256)",
          "setMaxTx(uint256)",
          "()",
          "isExcludedFromFee(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VANITY",
            "src": "contracts\\Vanity.sol:769"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tTotal",
            "src": "contracts\\Vanity.sol:726"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_rTotal",
            "src": "contracts\\Vanity.sol:727"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\Vanity.sol:730"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\Vanity.sol:731"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\Vanity.sol:732"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_taxFee",
            "src": "contracts\\Vanity.sol:734"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousTaxFee",
            "src": "contracts\\Vanity.sol:735"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_MarketingFee",
            "src": "contracts\\Vanity.sol:738"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousMarketingFee",
            "src": "contracts\\Vanity.sol:739"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BurnFee",
            "src": "contracts\\Vanity.sol:741"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousBurnFee",
            "src": "contracts\\Vanity.sol:742"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_liquidityFee",
            "src": "contracts\\Vanity.sol:744"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousLiquidityFee",
            "src": "contracts\\Vanity.sol:745"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MarketingWallet",
            "src": "contracts\\Vanity.sol:746"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Dead",
            "src": "contracts\\Vanity.sol:747"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numTokensSellToAddToLiquidity",
            "src": "contracts\\Vanity.sol:750"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_maxTxAmount",
            "src": "contracts\\Vanity.sol:751"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Hodl4Sell",
            "src": "contracts\\Vanity.sol:752"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapAndLiquifyEnabled",
            "src": "contracts\\Vanity.sol:754"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VANITY",
              "label": "_rOwned",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:715"
            },
            {
              "contract": "VANITY",
              "label": "_tOwned",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:716"
            },
            {
              "contract": "VANITY",
              "label": "_timestamp",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:717"
            },
            {
              "contract": "VANITY",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\Vanity.sol:718"
            },
            {
              "contract": "VANITY",
              "label": "_isExcludedFromFee",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\Vanity.sol:720"
            },
            {
              "contract": "VANITY",
              "label": "_isExcluded",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\Vanity.sol:722"
            },
            {
              "contract": "VANITY",
              "label": "_excluded",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts\\Vanity.sol:723"
            },
            {
              "contract": "VANITY",
              "label": "_tTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:726"
            },
            {
              "contract": "VANITY",
              "label": "_rTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:727"
            },
            {
              "contract": "VANITY",
              "label": "_tFeeTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:728"
            },
            {
              "contract": "VANITY",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts\\Vanity.sol:730"
            },
            {
              "contract": "VANITY",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts\\Vanity.sol:731"
            },
            {
              "contract": "VANITY",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\Vanity.sol:732"
            },
            {
              "contract": "VANITY",
              "label": "_taxFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:734"
            },
            {
              "contract": "VANITY",
              "label": "_previousTaxFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:735"
            },
            {
              "contract": "VANITY",
              "label": "takeFee",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:736"
            },
            {
              "contract": "VANITY",
              "label": "_MarketingFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:738"
            },
            {
              "contract": "VANITY",
              "label": "_previousMarketingFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:739"
            },
            {
              "contract": "VANITY",
              "label": "_BurnFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:741"
            },
            {
              "contract": "VANITY",
              "label": "_previousBurnFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:742"
            },
            {
              "contract": "VANITY",
              "label": "_liquidityFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:744"
            },
            {
              "contract": "VANITY",
              "label": "_previousLiquidityFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:745"
            },
            {
              "contract": "VANITY",
              "label": "MarketingWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:746"
            },
            {
              "contract": "VANITY",
              "label": "Dead",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:747"
            },
            {
              "contract": "VANITY",
              "label": "uniswapV2Router",
              "type": "t_contract(IUniswapV2Router02)1344",
              "src": "contracts\\Vanity.sol:748"
            },
            {
              "contract": "VANITY",
              "label": "uniswapV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:749"
            },
            {
              "contract": "VANITY",
              "label": "numTokensSellToAddToLiquidity",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:750"
            },
            {
              "contract": "VANITY",
              "label": "_maxTxAmount",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:751"
            },
            {
              "contract": "VANITY",
              "label": "Hodl4Sell",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:752"
            },
            {
              "contract": "VANITY",
              "label": "inSwapAndLiquify",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:753"
            },
            {
              "contract": "VANITY",
              "label": "swapAndLiquifyEnabled",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:754"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IUniswapV2Router02)1344": {
              "label": "contract IUniswapV2Router02"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "b340156a41dda35ee7795c1aa09c5c55298463823264826ebc1f0f081bbd99f9",
          "withoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c",
          "linkedWithoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "setOperatorAddress(address)",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:86"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:79"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "b340156a41dda35ee7795c1aa09c5c55298463823264826ebc1f0f081bbd99f9",
          "withoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c",
          "linkedWithoutMetadata": "9fc2f3129d2e1fa4b86adae70262192ff041c46c07a32469a47455b33f64398c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "setOperatorAddress(address)",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:86"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:79"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "a725f47d676042f013cc08acbdf5b4b7d703639d9ca07960b9e1b841d3c0fffe",
          "withoutMetadata": "6eead5664474fa402f22a1dae3e0c11139ece2354d787f751a630580b9ed5cfe",
          "linkedWithoutMetadata": "6eead5664474fa402f22a1dae3e0c11139ece2354d787f751a630580b9ed5cfe"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "a725f47d676042f013cc08acbdf5b4b7d703639d9ca07960b9e1b841d3c0fffe",
          "withoutMetadata": "6eead5664474fa402f22a1dae3e0c11139ece2354d787f751a630580b9ed5cfe",
          "linkedWithoutMetadata": "6eead5664474fa402f22a1dae3e0c11139ece2354d787f751a630580b9ed5cfe"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "9f41cecf2d11d80535e8d4859e764e9b20ec6331f1d85b28c233537e1725594e",
          "withoutMetadata": "3a7c8d32f45797857a9f9697125d6130ce14e72b5ba03318e3843316955d09b4",
          "linkedWithoutMetadata": "3a7c8d32f45797857a9f9697125d6130ce14e72b5ba03318e3843316955d09b4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "9f41cecf2d11d80535e8d4859e764e9b20ec6331f1d85b28c233537e1725594e",
          "withoutMetadata": "3a7c8d32f45797857a9f9697125d6130ce14e72b5ba03318e3843316955d09b4",
          "linkedWithoutMetadata": "3a7c8d32f45797857a9f9697125d6130ce14e72b5ba03318e3843316955d09b4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "swapAllTokensForEth()",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "56ba6e400a445a12d3f6d4b8ba4fffaf2a846d021fb832a9a9c807db3a0eadb2",
          "withoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db",
          "linkedWithoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "56ba6e400a445a12d3f6d4b8ba4fffaf2a846d021fb832a9a9c807db3a0eadb2",
          "withoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db",
          "linkedWithoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "9880773bbddacccf4bbbeed851172c327581732a09b7a703adc24017f2a6e714",
          "withoutMetadata": "7ac04de3ae77431a28997b485f4fad7713f11e1f97c08dc04709712b98c84332",
          "linkedWithoutMetadata": "7ac04de3ae77431a28997b485f4fad7713f11e1f97c08dc04709712b98c84332"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "9880773bbddacccf4bbbeed851172c327581732a09b7a703adc24017f2a6e714",
          "withoutMetadata": "7ac04de3ae77431a28997b485f4fad7713f11e1f97c08dc04709712b98c84332",
          "linkedWithoutMetadata": "7ac04de3ae77431a28997b485f4fad7713f11e1f97c08dc04709712b98c84332"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "56ba6e400a445a12d3f6d4b8ba4fffaf2a846d021fb832a9a9c807db3a0eadb2",
          "withoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db",
          "linkedWithoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Vanity.sol:283",
        "version": {
          "withMetadata": "8e56325c7e41d96f1b2b04bd205ecae68a9ef58a439795a1ec07a6ab689703ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "contracts\\Vanity.sol:268",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts\\Vanity.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts\\Vanity.sol:499",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\Vanity.sol:518",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Vanity.sol:571",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Vanity.sol:669",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts\\Vanity.sol:430",
        "version": {
          "withMetadata": "51e596675dc56e0ff928fdc290f8f6cf46a86ad2cc169287a212079fdf61ab36",
          "withoutMetadata": "af28cfa159ef369c68d3effba941b7f89bb340b87f7f1f8bac81d270abb1f08e",
          "linkedWithoutMetadata": "af28cfa159ef369c68d3effba941b7f89bb340b87f7f1f8bac81d270abb1f08e"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)",
          "geUnlockTime()",
          "lock(uint256)",
          "unlock()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_owner",
            "src": "contracts\\Vanity.sol:431"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:431"
            },
            {
              "contract": "Ownable",
              "label": "_previousOwner",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:432"
            },
            {
              "contract": "Ownable",
              "label": "_lockTime",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:433"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\Vanity.sol:125",
        "version": {
          "withMetadata": "b755f89077853894b6075e39fb5eb065a3c71f7eb15762218d9486ead81a2997",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VANITY": {
        "src": "contracts\\Vanity.sol:711",
        "version": {
          "withMetadata": "e4a337bd2bc68c3d7451233e28a38de163cea324dfd413a83b5136557f839804",
          "withoutMetadata": "bd36c754196db8f06918fa0daed35182f3596e70fece2ce57f14c40e3bc9b61b",
          "linkedWithoutMetadata": "bd36c754196db8f06918fa0daed35182f3596e70fece2ce57f14c40e3bc9b61b"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "isExcludedFromReward(address)",
          "totalFees()",
          "reflectionFromToken(uint256,bool)",
          "tokenFromReflection(uint256)",
          "excludeFromReward(address)",
          "includeInReward(address)",
          "excludeFromFee(address)",
          "includeInFee(address)",
          "setTaxFeePercent(uint256)",
          "setMarketingFeePercent(uint256)",
          "setBurnFeePercent(uint256)",
          "ChangeMarketingWallet(address)",
          "AmountPeopleHodl4Sell(uint256)",
          "setLiquidityFeePercent(uint256)",
          "setRouter(address)",
          "setSwapAndLiquifyEnabled(bool)",
          "settoken2LP(uint256)",
          "setMaxTx(uint256)",
          "()",
          "isExcludedFromFee(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VANITY",
            "src": "contracts\\Vanity.sol:769"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tTotal",
            "src": "contracts\\Vanity.sol:726"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_rTotal",
            "src": "contracts\\Vanity.sol:727"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\Vanity.sol:730"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\Vanity.sol:731"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\Vanity.sol:732"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_taxFee",
            "src": "contracts\\Vanity.sol:734"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousTaxFee",
            "src": "contracts\\Vanity.sol:735"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_MarketingFee",
            "src": "contracts\\Vanity.sol:738"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousMarketingFee",
            "src": "contracts\\Vanity.sol:739"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BurnFee",
            "src": "contracts\\Vanity.sol:741"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousBurnFee",
            "src": "contracts\\Vanity.sol:742"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_liquidityFee",
            "src": "contracts\\Vanity.sol:744"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousLiquidityFee",
            "src": "contracts\\Vanity.sol:745"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MarketingWallet",
            "src": "contracts\\Vanity.sol:746"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Dead",
            "src": "contracts\\Vanity.sol:747"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numTokensSellToAddToLiquidity",
            "src": "contracts\\Vanity.sol:750"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_maxTxAmount",
            "src": "contracts\\Vanity.sol:751"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Hodl4Sell",
            "src": "contracts\\Vanity.sol:752"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapAndLiquifyEnabled",
            "src": "contracts\\Vanity.sol:754"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VANITY",
              "label": "_rOwned",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:715"
            },
            {
              "contract": "VANITY",
              "label": "_tOwned",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:716"
            },
            {
              "contract": "VANITY",
              "label": "_timestamp",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:717"
            },
            {
              "contract": "VANITY",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\Vanity.sol:718"
            },
            {
              "contract": "VANITY",
              "label": "_isExcludedFromFee",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\Vanity.sol:720"
            },
            {
              "contract": "VANITY",
              "label": "_isExcluded",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\Vanity.sol:722"
            },
            {
              "contract": "VANITY",
              "label": "_excluded",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts\\Vanity.sol:723"
            },
            {
              "contract": "VANITY",
              "label": "_tTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:726"
            },
            {
              "contract": "VANITY",
              "label": "_rTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:727"
            },
            {
              "contract": "VANITY",
              "label": "_tFeeTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:728"
            },
            {
              "contract": "VANITY",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts\\Vanity.sol:730"
            },
            {
              "contract": "VANITY",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts\\Vanity.sol:731"
            },
            {
              "contract": "VANITY",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\Vanity.sol:732"
            },
            {
              "contract": "VANITY",
              "label": "_taxFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:734"
            },
            {
              "contract": "VANITY",
              "label": "_previousTaxFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:735"
            },
            {
              "contract": "VANITY",
              "label": "takeFee",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:736"
            },
            {
              "contract": "VANITY",
              "label": "_MarketingFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:738"
            },
            {
              "contract": "VANITY",
              "label": "_previousMarketingFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:739"
            },
            {
              "contract": "VANITY",
              "label": "_BurnFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:741"
            },
            {
              "contract": "VANITY",
              "label": "_previousBurnFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:742"
            },
            {
              "contract": "VANITY",
              "label": "_liquidityFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:744"
            },
            {
              "contract": "VANITY",
              "label": "_previousLiquidityFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:745"
            },
            {
              "contract": "VANITY",
              "label": "MarketingWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:746"
            },
            {
              "contract": "VANITY",
              "label": "Dead",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:747"
            },
            {
              "contract": "VANITY",
              "label": "uniswapV2Router",
              "type": "t_contract(IUniswapV2Router02)1344",
              "src": "contracts\\Vanity.sol:748"
            },
            {
              "contract": "VANITY",
              "label": "uniswapV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:749"
            },
            {
              "contract": "VANITY",
              "label": "numTokensSellToAddToLiquidity",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:750"
            },
            {
              "contract": "VANITY",
              "label": "_maxTxAmount",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:751"
            },
            {
              "contract": "VANITY",
              "label": "Hodl4Sell",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:752"
            },
            {
              "contract": "VANITY",
              "label": "inSwapAndLiquify",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:753"
            },
            {
              "contract": "VANITY",
              "label": "swapAndLiquifyEnabled",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:754"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IUniswapV2Router02)1344": {
              "label": "contract IUniswapV2Router02"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "56ba6e400a445a12d3f6d4b8ba4fffaf2a846d021fb832a9a9c807db3a0eadb2",
          "withoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db",
          "linkedWithoutMetadata": "fa1dbb9115e6cba8bbebbe306310dd281f6955682b07fecec3579086f09068db"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\VNYPaymentHandler.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\VNYPaymentHandler.sol:60",
        "version": {
          "withMetadata": "585517d56f666fd8d1f1e1d1a1abf38b20201e5111842221b2e6d3315e93351a",
          "withoutMetadata": "ca5a306e4f1b3435cad881f83602490761afe706bad01163878d668f0150be0c",
          "linkedWithoutMetadata": "ca5a306e4f1b3435cad881f83602490761afe706bad01163878d668f0150be0c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\VNYPaymentHandler.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\VNYPaymentHandler.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\VNYPaymentHandler.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20)689",
              "src": "contracts\\VNYPaymentHandler.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\VNYPaymentHandler.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\VNYPaymentHandler.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20)689": {
              "label": "contract ERC20"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\Vanity.sol:283",
        "version": {
          "withMetadata": "8e56325c7e41d96f1b2b04bd205ecae68a9ef58a439795a1ec07a6ab689703ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "contracts\\Vanity.sol:268",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBEP20": {
        "src": "contracts\\Vanity.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts\\Vanity.sol:499",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\Vanity.sol:518",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts\\Vanity.sol:571",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts\\Vanity.sol:669",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "contracts\\Vanity.sol:430",
        "version": {
          "withMetadata": "51e596675dc56e0ff928fdc290f8f6cf46a86ad2cc169287a212079fdf61ab36",
          "withoutMetadata": "af28cfa159ef369c68d3effba941b7f89bb340b87f7f1f8bac81d270abb1f08e",
          "linkedWithoutMetadata": "af28cfa159ef369c68d3effba941b7f89bb340b87f7f1f8bac81d270abb1f08e"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)",
          "geUnlockTime()",
          "lock(uint256)",
          "unlock()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_owner",
            "src": "contracts\\Vanity.sol:431"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:431"
            },
            {
              "contract": "Ownable",
              "label": "_previousOwner",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:432"
            },
            {
              "contract": "Ownable",
              "label": "_lockTime",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:433"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\Vanity.sol:125",
        "version": {
          "withMetadata": "b755f89077853894b6075e39fb5eb065a3c71f7eb15762218d9486ead81a2997",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VANITY": {
        "src": "contracts\\Vanity.sol:711",
        "version": {
          "withMetadata": "e4a337bd2bc68c3d7451233e28a38de163cea324dfd413a83b5136557f839804",
          "withoutMetadata": "bd36c754196db8f06918fa0daed35182f3596e70fece2ce57f14c40e3bc9b61b",
          "linkedWithoutMetadata": "bd36c754196db8f06918fa0daed35182f3596e70fece2ce57f14c40e3bc9b61b"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "isExcludedFromReward(address)",
          "totalFees()",
          "reflectionFromToken(uint256,bool)",
          "tokenFromReflection(uint256)",
          "excludeFromReward(address)",
          "includeInReward(address)",
          "excludeFromFee(address)",
          "includeInFee(address)",
          "setTaxFeePercent(uint256)",
          "setMarketingFeePercent(uint256)",
          "setBurnFeePercent(uint256)",
          "ChangeMarketingWallet(address)",
          "AmountPeopleHodl4Sell(uint256)",
          "setLiquidityFeePercent(uint256)",
          "setRouter(address)",
          "setSwapAndLiquifyEnabled(bool)",
          "settoken2LP(uint256)",
          "setMaxTx(uint256)",
          "()",
          "isExcludedFromFee(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VANITY",
            "src": "contracts\\Vanity.sol:769"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tTotal",
            "src": "contracts\\Vanity.sol:726"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_rTotal",
            "src": "contracts\\Vanity.sol:727"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\Vanity.sol:730"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\Vanity.sol:731"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\Vanity.sol:732"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_taxFee",
            "src": "contracts\\Vanity.sol:734"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousTaxFee",
            "src": "contracts\\Vanity.sol:735"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_MarketingFee",
            "src": "contracts\\Vanity.sol:738"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousMarketingFee",
            "src": "contracts\\Vanity.sol:739"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BurnFee",
            "src": "contracts\\Vanity.sol:741"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousBurnFee",
            "src": "contracts\\Vanity.sol:742"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_liquidityFee",
            "src": "contracts\\Vanity.sol:744"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_previousLiquidityFee",
            "src": "contracts\\Vanity.sol:745"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MarketingWallet",
            "src": "contracts\\Vanity.sol:746"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Dead",
            "src": "contracts\\Vanity.sol:747"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numTokensSellToAddToLiquidity",
            "src": "contracts\\Vanity.sol:750"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_maxTxAmount",
            "src": "contracts\\Vanity.sol:751"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Hodl4Sell",
            "src": "contracts\\Vanity.sol:752"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapAndLiquifyEnabled",
            "src": "contracts\\Vanity.sol:754"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VANITY",
              "label": "_rOwned",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:715"
            },
            {
              "contract": "VANITY",
              "label": "_tOwned",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:716"
            },
            {
              "contract": "VANITY",
              "label": "_timestamp",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Vanity.sol:717"
            },
            {
              "contract": "VANITY",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\Vanity.sol:718"
            },
            {
              "contract": "VANITY",
              "label": "_isExcludedFromFee",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\Vanity.sol:720"
            },
            {
              "contract": "VANITY",
              "label": "_isExcluded",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\Vanity.sol:722"
            },
            {
              "contract": "VANITY",
              "label": "_excluded",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts\\Vanity.sol:723"
            },
            {
              "contract": "VANITY",
              "label": "_tTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:726"
            },
            {
              "contract": "VANITY",
              "label": "_rTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:727"
            },
            {
              "contract": "VANITY",
              "label": "_tFeeTotal",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:728"
            },
            {
              "contract": "VANITY",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts\\Vanity.sol:730"
            },
            {
              "contract": "VANITY",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts\\Vanity.sol:731"
            },
            {
              "contract": "VANITY",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\Vanity.sol:732"
            },
            {
              "contract": "VANITY",
              "label": "_taxFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:734"
            },
            {
              "contract": "VANITY",
              "label": "_previousTaxFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:735"
            },
            {
              "contract": "VANITY",
              "label": "takeFee",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:736"
            },
            {
              "contract": "VANITY",
              "label": "_MarketingFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:738"
            },
            {
              "contract": "VANITY",
              "label": "_previousMarketingFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:739"
            },
            {
              "contract": "VANITY",
              "label": "_BurnFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:741"
            },
            {
              "contract": "VANITY",
              "label": "_previousBurnFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:742"
            },
            {
              "contract": "VANITY",
              "label": "_liquidityFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:744"
            },
            {
              "contract": "VANITY",
              "label": "_previousLiquidityFee",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:745"
            },
            {
              "contract": "VANITY",
              "label": "MarketingWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:746"
            },
            {
              "contract": "VANITY",
              "label": "Dead",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:747"
            },
            {
              "contract": "VANITY",
              "label": "uniswapV2Router",
              "type": "t_contract(IUniswapV2Router02)1344",
              "src": "contracts\\Vanity.sol:748"
            },
            {
              "contract": "VANITY",
              "label": "uniswapV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:749"
            },
            {
              "contract": "VANITY",
              "label": "numTokensSellToAddToLiquidity",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:750"
            },
            {
              "contract": "VANITY",
              "label": "_maxTxAmount",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:751"
            },
            {
              "contract": "VANITY",
              "label": "Hodl4Sell",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:752"
            },
            {
              "contract": "VANITY",
              "label": "inSwapAndLiquify",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:753"
            },
            {
              "contract": "VANITY",
              "label": "swapAndLiquifyEnabled",
              "type": "t_bool",
              "src": "contracts\\Vanity.sol:754"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_contract(IUniswapV2Router02)1344": {
              "label": "contract IUniswapV2Router02"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "29c244a0f751615add3d6d1ae35e6b5822deaec8df5f695e9d24896ae9e5fbc7",
          "withoutMetadata": "7a1ef8d638d0b68dc252ad8f390a29b25797ec0ecb31fe05e79eb02ea737aef9",
          "linkedWithoutMetadata": "7a1ef8d638d0b68dc252ad8f390a29b25797ec0ecb31fe05e79eb02ea737aef9"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "29c244a0f751615add3d6d1ae35e6b5822deaec8df5f695e9d24896ae9e5fbc7",
          "withoutMetadata": "7a1ef8d638d0b68dc252ad8f390a29b25797ec0ecb31fe05e79eb02ea737aef9",
          "linkedWithoutMetadata": "7a1ef8d638d0b68dc252ad8f390a29b25797ec0ecb31fe05e79eb02ea737aef9"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "60d815eac025188ecb2c673e0b5c9198862aba5bd3b15a9de0e2ea4052488c95",
          "withoutMetadata": "54f1a8167d320cf597db085d988c30e3bad764106493d511005307eced258c46",
          "linkedWithoutMetadata": "54f1a8167d320cf597db085d988c30e3bad764106493d511005307eced258c46"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "60d815eac025188ecb2c673e0b5c9198862aba5bd3b15a9de0e2ea4052488c95",
          "withoutMetadata": "54f1a8167d320cf597db085d988c30e3bad764106493d511005307eced258c46",
          "linkedWithoutMetadata": "54f1a8167d320cf597db085d988c30e3bad764106493d511005307eced258c46"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "74373762dd381e4df1fb7a651de1d3f622d66bef5f7aad8af2b080d39814aebf",
          "withoutMetadata": "d37e74d4f638960c1369699073b14feddae7d2cab265d2e8177ea94a56c4e381",
          "linkedWithoutMetadata": "d37e74d4f638960c1369699073b14feddae7d2cab265d2e8177ea94a56c4e381"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "74373762dd381e4df1fb7a651de1d3f622d66bef5f7aad8af2b080d39814aebf",
          "withoutMetadata": "d37e74d4f638960c1369699073b14feddae7d2cab265d2e8177ea94a56c4e381",
          "linkedWithoutMetadata": "d37e74d4f638960c1369699073b14feddae7d2cab265d2e8177ea94a56c4e381"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "88a6333ebd498a776f78af61433c93101ca0a7c9c2369335cf9209e8803401ef",
          "withoutMetadata": "3a6f0edd3586ce23900e903b03d7a3a37459f9190d74ae8eabbfdb7e427b16b3",
          "linkedWithoutMetadata": "3a6f0edd3586ce23900e903b03d7a3a37459f9190d74ae8eabbfdb7e427b16b3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "88a6333ebd498a776f78af61433c93101ca0a7c9c2369335cf9209e8803401ef",
          "withoutMetadata": "3a6f0edd3586ce23900e903b03d7a3a37459f9190d74ae8eabbfdb7e427b16b3",
          "linkedWithoutMetadata": "3a6f0edd3586ce23900e903b03d7a3a37459f9190d74ae8eabbfdb7e427b16b3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "0eab588aba1634080a867f8c889fb4f1a6dc871d21229240f6dc4c0b0e0cbe69",
          "withoutMetadata": "7742897b0306697e34221adba49684b6eee86a68bc46a49f18e597cdd3921faa",
          "linkedWithoutMetadata": "7742897b0306697e34221adba49684b6eee86a68bc46a49f18e597cdd3921faa"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "0eab588aba1634080a867f8c889fb4f1a6dc871d21229240f6dc4c0b0e0cbe69",
          "withoutMetadata": "7742897b0306697e34221adba49684b6eee86a68bc46a49f18e597cdd3921faa",
          "linkedWithoutMetadata": "7742897b0306697e34221adba49684b6eee86a68bc46a49f18e597cdd3921faa"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "a0da745d7a20c9c21a6208be900beb4078372ff7c0cb347a43336844d05eeda4",
          "withoutMetadata": "6211fba62b5e870766011d2b66f252ead41d0639a51a55e978936ed9b24915c7",
          "linkedWithoutMetadata": "6211fba62b5e870766011d2b66f252ead41d0639a51a55e978936ed9b24915c7"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "a0da745d7a20c9c21a6208be900beb4078372ff7c0cb347a43336844d05eeda4",
          "withoutMetadata": "6211fba62b5e870766011d2b66f252ead41d0639a51a55e978936ed9b24915c7",
          "linkedWithoutMetadata": "6211fba62b5e870766011d2b66f252ead41d0639a51a55e978936ed9b24915c7"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "6ca55576bc8f92b54de05198b344eb81d904788f705d843b19602afb26769029",
          "withoutMetadata": "83a1c3edc528cde7c65ab99fd6862e062830bd99e02a7b2f3ee75343122e16f6",
          "linkedWithoutMetadata": "83a1c3edc528cde7c65ab99fd6862e062830bd99e02a7b2f3ee75343122e16f6"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "2b0079b929eff0cc6c95c1ce0e70526a6867dae1bc97ddf39e76f4a9123b050d",
          "withoutMetadata": "580a420e74bf414e268eb04c42857b1ca230fcb0344abae73b976a75466329cc",
          "linkedWithoutMetadata": "580a420e74bf414e268eb04c42857b1ca230fcb0344abae73b976a75466329cc"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "2b0079b929eff0cc6c95c1ce0e70526a6867dae1bc97ddf39e76f4a9123b050d",
          "withoutMetadata": "580a420e74bf414e268eb04c42857b1ca230fcb0344abae73b976a75466329cc",
          "linkedWithoutMetadata": "580a420e74bf414e268eb04c42857b1ca230fcb0344abae73b976a75466329cc"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "edbcee9fad4ea20d3554e254fac12c49e699616f139587f82b82c44d17e78a23",
          "withoutMetadata": "53d516acd1052284754380364ba9f2fcdf85dec7937d95604823889442c41f0f",
          "linkedWithoutMetadata": "53d516acd1052284754380364ba9f2fcdf85dec7937d95604823889442c41f0f"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "edbcee9fad4ea20d3554e254fac12c49e699616f139587f82b82c44d17e78a23",
          "withoutMetadata": "53d516acd1052284754380364ba9f2fcdf85dec7937d95604823889442c41f0f",
          "linkedWithoutMetadata": "53d516acd1052284754380364ba9f2fcdf85dec7937d95604823889442c41f0f"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "4dacedfe3b32ee464ec5430ebb200dd0586696a79c3c620dd3922ff5ccd41f4b",
          "withoutMetadata": "9108b2550b7670b553a47d0b4362b92b9cbf3f708b0f12da1dcc41c5efb266d4",
          "linkedWithoutMetadata": "9108b2550b7670b553a47d0b4362b92b9cbf3f708b0f12da1dcc41c5efb266d4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "4dacedfe3b32ee464ec5430ebb200dd0586696a79c3c620dd3922ff5ccd41f4b",
          "withoutMetadata": "9108b2550b7670b553a47d0b4362b92b9cbf3f708b0f12da1dcc41c5efb266d4",
          "linkedWithoutMetadata": "9108b2550b7670b553a47d0b4362b92b9cbf3f708b0f12da1dcc41c5efb266d4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "e086f3e95355b1ff5dab1eff9051131f33f01eda9e8e6eba4b5d4f0ca95f336d",
          "withoutMetadata": "67a4dc145f10ffff7d1bc8b976e7d7e358d674bf152ab54132c17db9c3ff9703",
          "linkedWithoutMetadata": "67a4dc145f10ffff7d1bc8b976e7d7e358d674bf152ab54132c17db9c3ff9703"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "e086f3e95355b1ff5dab1eff9051131f33f01eda9e8e6eba4b5d4f0ca95f336d",
          "withoutMetadata": "67a4dc145f10ffff7d1bc8b976e7d7e358d674bf152ab54132c17db9c3ff9703",
          "linkedWithoutMetadata": "67a4dc145f10ffff7d1bc8b976e7d7e358d674bf152ab54132c17db9c3ff9703"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "51ffdec81a00c830736a27f3fd42f5f789f9e14a4f8c4ec65920c5939986eaf2",
          "withoutMetadata": "65ffcf1e058fcc83475e67a70b39d184ff063c82a3f9af5db6db3c46de75f991",
          "linkedWithoutMetadata": "65ffcf1e058fcc83475e67a70b39d184ff063c82a3f9af5db6db3c46de75f991"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "51ffdec81a00c830736a27f3fd42f5f789f9e14a4f8c4ec65920c5939986eaf2",
          "withoutMetadata": "65ffcf1e058fcc83475e67a70b39d184ff063c82a3f9af5db6db3c46de75f991",
          "linkedWithoutMetadata": "65ffcf1e058fcc83475e67a70b39d184ff063c82a3f9af5db6db3c46de75f991"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "a7ca5b104158b369fcebb146ad1fcb42d9d1a58bffaf374f2c9160c5436a0b34",
          "withoutMetadata": "150a25911a1c5b2a9885a47be0e44db9bf6dad9ddd6a6718f4ed3c81a6b04cb1",
          "linkedWithoutMetadata": "150a25911a1c5b2a9885a47be0e44db9bf6dad9ddd6a6718f4ed3c81a6b04cb1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "a7ca5b104158b369fcebb146ad1fcb42d9d1a58bffaf374f2c9160c5436a0b34",
          "withoutMetadata": "150a25911a1c5b2a9885a47be0e44db9bf6dad9ddd6a6718f4ed3c81a6b04cb1",
          "linkedWithoutMetadata": "150a25911a1c5b2a9885a47be0e44db9bf6dad9ddd6a6718f4ed3c81a6b04cb1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "3da63aae987bb2d10337b27e217a0db01e265d7d0d2e443bfd2d2a74b8d97f1d",
          "withoutMetadata": "af39d152c644814e771ae9e220298151073233916b41fb86148b3c3eda43d6b3",
          "linkedWithoutMetadata": "af39d152c644814e771ae9e220298151073233916b41fb86148b3c3eda43d6b3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "3da63aae987bb2d10337b27e217a0db01e265d7d0d2e443bfd2d2a74b8d97f1d",
          "withoutMetadata": "af39d152c644814e771ae9e220298151073233916b41fb86148b3c3eda43d6b3",
          "linkedWithoutMetadata": "af39d152c644814e771ae9e220298151073233916b41fb86148b3c3eda43d6b3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "e210e16da7a2b144f2429814cae30c0fadb1565a68b21d11e8e9207a9929d4e1",
          "withoutMetadata": "e3d5ce605c919cc171fca5423d0441ddd43e5482e39f3bbcac3543ac198a2a11",
          "linkedWithoutMetadata": "e3d5ce605c919cc171fca5423d0441ddd43e5482e39f3bbcac3543ac198a2a11"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "e210e16da7a2b144f2429814cae30c0fadb1565a68b21d11e8e9207a9929d4e1",
          "withoutMetadata": "e3d5ce605c919cc171fca5423d0441ddd43e5482e39f3bbcac3543ac198a2a11",
          "linkedWithoutMetadata": "e3d5ce605c919cc171fca5423d0441ddd43e5482e39f3bbcac3543ac198a2a11"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "150789fa873b304cc03bee325507d343240e754865701896890b0741433247da",
          "withoutMetadata": "cb9eb24c4c55a4f688eee9c44f67399c2e7c19c91abcffa4433f2145aa3d8a43",
          "linkedWithoutMetadata": "cb9eb24c4c55a4f688eee9c44f67399c2e7c19c91abcffa4433f2145aa3d8a43"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "150789fa873b304cc03bee325507d343240e754865701896890b0741433247da",
          "withoutMetadata": "cb9eb24c4c55a4f688eee9c44f67399c2e7c19c91abcffa4433f2145aa3d8a43",
          "linkedWithoutMetadata": "cb9eb24c4c55a4f688eee9c44f67399c2e7c19c91abcffa4433f2145aa3d8a43"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "c805d27430d1546afa5a46a0f4d38fde9de481066c956ff223121167e861eaa4",
          "withoutMetadata": "1deb072e31bc3fbf20d4fac641891c96761a350fe630e64c698eefc406a3dc3d",
          "linkedWithoutMetadata": "1deb072e31bc3fbf20d4fac641891c96761a350fe630e64c698eefc406a3dc3d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "8e5dc9e0cf163249ef0b7061e25aecda4b0b032840578a34107132fb692b5158",
          "withoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9",
          "linkedWithoutMetadata": "b1257b17319d8f04518ff01b5622e07c089a59d1cfe5ea29ca0b11367adb80c9"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:13",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:17",
        "version": {
          "withMetadata": "506c7866b57c856561f1b7204416fcaedac7f60ebc68cdd7898d1f3b52d016e8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:8",
        "version": {
          "withMetadata": "7b12f8354626797eccbdc3e68ebed9b3735e3c2bcddc8a55fddf9f27a0ef846e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:15",
        "version": {
          "withMetadata": "67524d09a7267169b83d47808c62e07b0ec1aa5315f6f9f32ec2fd473edf24da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IPancakeSwapV2Router02": {
        "src": "contracts\\Vanity.sol:34",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "factory()",
          "WETH()",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VNYPaymentHandler": {
        "src": "contracts\\Vanity.sol:60",
        "version": {
          "withMetadata": "c805d27430d1546afa5a46a0f4d38fde9de481066c956ff223121167e861eaa4",
          "withoutMetadata": "1deb072e31bc3fbf20d4fac641891c96761a350fe630e64c698eefc406a3dc3d",
          "linkedWithoutMetadata": "1deb072e31bc3fbf20d4fac641891c96761a350fe630e64c698eefc406a3dc3d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "()",
          "pay(uint256)",
          "buyback(uint256)",
          "setTeamWallet(address)",
          "setTeamPercent(uint256)",
          "setContractWallet(address)",
          "setContractPercent(uint256)",
          "setBurnPercent(uint256)",
          "setDivider(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VNYPaymentHandler",
            "src": "contracts\\Vanity.sol:79"
          },
          {
            "kind": "state-variable-assignment",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deadAddress",
            "src": "contracts\\Vanity.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Router",
              "type": "t_contract(IPancakeSwapV2Router02)1775",
              "src": "contracts\\Vanity.sol:64"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "pancakeV2Pair",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:65"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "feeToken",
              "type": "t_contract(ERC20Burnable)829",
              "src": "contracts\\Vanity.sol:67"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "burnPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:68"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "divider",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:69"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:71"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "contractPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:72"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamWallet",
              "type": "t_address",
              "src": "contracts\\Vanity.sol:74"
            },
            {
              "contract": "VNYPaymentHandler",
              "label": "teamPercent",
              "type": "t_uint256",
              "src": "contracts\\Vanity.sol:75"
            }
          ],
          "types": {
            "t_contract(IPancakeSwapV2Router02)1775": {
              "label": "contract IPancakeSwapV2Router02"
            },
            "t_address": {
              "label": "address"
            },
            "t_contract(ERC20Burnable)829": {
              "label": "contract ERC20Burnable"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}